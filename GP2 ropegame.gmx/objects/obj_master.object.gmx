<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.action = 1;
viewfollow = noone;
subroom = noone;
transitiontimer = 0;
subroomprev = noone;
pause = 0;

scr_controls0();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEXT N' SHIT 1

//by Zack @zackb https://gamejolt.com/f/game-maker-super-easy-typewriter-like-dialogue-example/1908

//write your messages in an array, starting at 0, like so
message[0] = "";
message[1] = "You should be able to read this text only once in a lifetime! Make sure you read this carefully or... or bad stuff happens and haunts you for the rest of your miserable life."
message[2] = "This shit doesn't probably even work!!"
message[3] = "Yeeaahh whazzuup muh homies?!? Gggg Ggggg Jjjj Fffff Fffff Gggggggggg Ffff Fffffff Fff F Ff";
message[4] = "Whaatt?? Fuk off from muh hoods dawg!!1!";
messend = 4; //is the last number in our array

message_current = 0; //0 is the first number in our array, and the message we are currently at
message_draw = ""; //this is what we 'write' out. It's blank right now
increase = 0.5; //the speed at which new characters are added
characters = 0; //how many characters have already been drawn
hold = 0; //if we hold klik, the text will render faster

hlimit = 128; //horizontal area for text
vlimit = 64; //vertical area
line = 16; //pixels between lines (vertical)
cp = 0; //"checkpoint" for text if it gets cut for being too long

message_length = string_length(message[message_current]); //get the number of characters in the first message
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if message_current != 0 || transitiontimer &gt; 0 || pause = 1
    global.action = 0;
else global.action = 1; //these codes (should) guarantee game pauses when texting
if keyboard_check_pressed(key_start)
{
    if pause = 1
        pause = 0;
    else pause = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VIEW
if (instance_exists(viewfollow)) 
{
    if (subroom != noone &amp;&amp; transitiontimer &lt;= 0) 
    {
        view_center_on(0,viewfollow.x,viewfollow.y,subroom.x,subroom.y,subroom.x2,subroom.y2);

        if (subroom != subroomprev) 
        {
            if (subroomprev != noone) 
            {
                transitiontimer = 0.01;
            }
        }  
    }
    if (transitiontimer &gt; 0) 
    {
        transitiontimer += 0.025;
        var x1, x2, y1, y2;
        x1 = clamp(viewfollow.x - view_wview[0]/2,subroomprev.x1,subroomprev.x2 - view_wview);
        y1 = clamp(viewfollow.y - view_hview[0]/2,subroomprev.y1,subroomprev.y2 - view_hview);
        
        x2 = clamp(viewfollow.x - view_wview[0]/2,subroom.x1,subroom.x2 - view_wview);
        y2 = clamp(viewfollow.y - view_hview[0]/2,subroom.y1,subroom.y2 - view_hview);
        
        view_xview = lerp(x1,x2,transitiontimer);
        view_yview = lerp(y1,y2,transitiontimer);
        if (transitiontimer &gt;= 1) 
        {
            subroomprev = subroom;
            transitiontimer = 0;
        }
    }
}
instance_deactivate_all(1); //deactivate all for optimization, then activate subroom:
instance_activate_region(subroom.x-32,subroom.y-32,subroom.x2-subroom.x+32,
    subroom.y2-subroom.y+32,1); //+-32 makes sure nearby rooms are activated too
if object_exists(obj_rope)
    instance_activate_object(obj_rope);
if object_exists(obj_player)
    instance_activate_object(obj_player);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEXT
var klik = key_A;
if (characters &lt; message_length)
{ //if current character count is less than the amount in current message* 
    hold = keyboard_check(klik); //hold is true or false if we hold klik or not
    if //string_width_ext(message_draw,line,hlimit) &lt; hlimit &amp;&amp; //unnecessary?
        string_height_ext(message_draw,-1,hlimit-4) &lt; vlimit
    {
    characters += increase * (1 + hold*2); //increase speed based on hold
    message_draw = string_copy(message[message_current],cp,characters); //copy string to current character
    }
    else if keyboard_check_pressed(klik)
    {
        message_length -= characters; //shorten text with the already written part
        cp += characters; //set text position to start at the text written so far
        characters = 0; //start writing the new part from beginning
        message_draw = ""; //clear text
    }
} 
else 
{ //if current character is more than the amount in the current message
    cp = 0;
    if (keyboard_check_pressed(klik) &amp;&amp; message_current &gt; 0) 
    {
        if (message_current &lt; messend) 
        { //if there are more messages left to show
            message_current += 1; //increase the message by 1
            message_length = string_length(message[message_current]); //get the new character length for message
            characters = 0; //set the characters back to 0
            message_draw = ""; //clear the drawn text
        }
        else 
        { //if our messages are done (we reach end)...
            message_current = 0;
            message_draw = "";
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEXT
draw_set_colour(c_black);
draw_rectangle(view_xview[0]+64,view_yview[0],view_xview[0]+64+hlimit,view_yview[0]+vlimit,0);
draw_set_colour(c_lime);
draw_set_font(font0);
draw_text_ext(view_xview[0]+64,view_yview[0],message_draw,-1,hlimit);
//debug:
draw_text(view_xview[0],view_yview[0],characters);
draw_text(view_xview[0],view_yview[0]+16,message_length);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
