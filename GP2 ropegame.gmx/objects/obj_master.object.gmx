<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.action = 0;
global.saves = 0;
viewfollow = noone;
subroom = noone;
transitiontimer = 0;
subroomprev = noone;
pause = 0;

game = 0;
menuu = 0;
m[0] = "New Game";
m[1] = "Load Game";
m[2] = "Quit Game";
global.fname = "savefile.ini" //save file name

scr_controls0();

global.unlockables = 2; //counts unlockable variables in array (more info: set_variables)

//particles, yeeaayy
global.pt1 = part_system_create();
part_system_depth(global.pt1,-4);
global.ptype1 = part_type_create();
part_type_shape(global.ptype1,pt_shape_flare);
part_type_colour2(global.ptype1,c_fuchsia,c_aqua);
part_type_alpha2(global.ptype1,0.75,0);
//part_type_size(global.ptype1,0.1,0.2,0,0.05);
part_type_scale(global.ptype1,0.3,0.3);
part_type_life(global.ptype1,20,40);
part_type_direction(global.ptype1,0,360,0,10);
part_type_speed(global.ptype1,0.1,0.25,0,0.1);
//part_type_gravity(global.ptype1,1,270);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEXT N' SHIT 1

//by Zack @zackb https://gamejolt.com/f/game-maker-super-easy-typewriter-like-dialogue-example/1908

//write your messages in an array, starting at 0, like so
message[0] = "";
message[1] = "You should be able to read this text only once in a lifetime! Make sure you read this carefully or... or bad stuff happens and haunts you for the rest of your miserable life."
message[2] = "This shit doesn't probably even work!!"
message[3] = "Yeeaahh whazzuup muh homies?!? Gggg Ggggg Jjjj Fffff Fffff Gggggggggg Ffff Fffffff Fff F Ff";
message[4] = "Whaatt?? Fuk off from muh hoods dawg!!1!";
messend = 4; //is the last number in our array

message_current = 0; //0 is the first number in our array, and the message we are currently at
message_draw = ""; //this is what we 'write' out. It's blank right now
increase = 0.5; //the speed at which new characters are added
characters = 0; //how many characters have already been drawn
hold = 0; //if we hold klik, the text will render faster

hlimit = 128; //horizontal area for text
vlimit = 64; //vertical area
line = 16; //pixels between lines (vertical)
cp = 0; //"checkpoint" for text if it gets cut for being too long

message_length = string_length(message[message_current]); //get the number of characters in the first message
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.action = 1;
instance_create(global.player_x,global.player_y,obj_player);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main menu
if room = menu
{
var i;
for (i=0; i&lt;=2; i++)
if point_in_rectangle(mouse_x,mouse_y,room_width/2-64,room_height/2-64+(i*48),
    room_width/2+64,room_height/2-32+(i*48))
{
    menuu = i+1;
    if mouse_check_button_pressed(mb_left)
    switch (menuu)
    {
    case 1:
    {   
        game = 1; //reset();
        room_goto_next(); //temporary, rooms must be included in save file!!
        break;
    }
    case 2:
    {
        if file_exists(global.fname)
        {
        game = 2 //load();
        room_goto_next(); //temporary, rooms must be included in save file!!
        break;
        }
    }
    case 3:
    {
        game_end();
        break;
    }
    }
}
else menuu = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PAUSE GAME SITUATIONS (important)
if room != menu
{
if message_current != 0 || instance_exists(obj_alternate_text) //2 versions if text is on
    || transitiontimer &gt; 0 || pause = 1 //checks if room transition or pause game is on
{
    global.action = 0;
}
else
{
    global.action = 1;
}
if keyboard_check_pressed(key_start)
{
    if pause = 1
        pause = 0;
    else pause = 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// VIEW
if room != menu
{
    var sub = subroom;
if (instance_exists(viewfollow)) 
{
    if (sub != noone &amp;&amp; transitiontimer &lt;= 0) 
    {
        view_center_on(0,viewfollow.x,viewfollow.y,sub.x,sub.y,sub.x2,sub.y2);

        if (sub != subroomprev) 
        {
            if (subroomprev != noone) 
            {
                transitiontimer = 0.01;
            }
        }  
    }
    if (transitiontimer &gt; 0) 
    {
        transitiontimer += 0.025;
        var x1, x2, y1, y2;
        x1 = clamp(viewfollow.x - view_wview[0]/2,subroomprev.x1,subroomprev.x2 - view_wview);
        y1 = clamp(viewfollow.y - view_hview[0]/2,subroomprev.y1,subroomprev.y2 - view_hview);
        
        x2 = clamp(viewfollow.x - view_wview[0]/2,sub.x1,sub.x2 - view_wview);
        y2 = clamp(viewfollow.y - view_hview[0]/2,sub.y1,sub.y2 - view_hview);
        
        view_xview = lerp(x1,x2,transitiontimer);
        view_yview = lerp(y1,y2,transitiontimer);
        if (transitiontimer &gt;= 1) 
        {
            subroomprev = sub;
            transitiontimer = 0;
        }
    }
}
if instance_exists(sub)
{
instance_deactivate_all(1); //deactivate all for optimization, then activate subroom:
instance_activate_region(subroom.x-32,sub.y-32,sub.x2-sub.x+32,
    sub.y2-sub.y+32,1); //+-32 makes sure nearby rooms are activated too
}
if object_exists(obj_rope)
    instance_activate_object(obj_rope);
if object_exists(obj_player)
    instance_activate_object(obj_player);
if object_exists(obj_alternate_text)
    instance_activate_object(obj_alternate_text);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TEXT
if room != menu
{
var klik = key_A;
if (characters &lt; message_length)
{ //if current character count is less than the amount in current message* 
    hold = keyboard_check(klik); //hold is true or false if we hold klik or not
    if //string_width_ext(message_draw,line,hlimit) &lt; hlimit &amp;&amp; //unnecessary?
        string_height_ext(message_draw,-1,hlimit-4) &lt; vlimit
    {
    characters += increase * (1 + hold*2); //increase speed based on hold
    message_draw = string_copy(message[message_current],cp,characters); //copy string to current character
    }
    else if keyboard_check_pressed(klik)
    {
        message_length -= characters; //shorten text with the already written part
        cp += characters; //set text position to start at the text written so far
        characters = 0; //start writing the new part from beginning
        message_draw = ""; //clear text
    }
} 
else 
{ //if current character is more than the amount in the current message
    cp = 0;
    if (keyboard_check_pressed(klik) &amp;&amp; message_current &gt; 0) 
    {
        if (message_current &lt; messend) 
        { //if there are more messages left to show
            message_current += 1; //increase the message by 1
            message_length = string_length(message[message_current]); //get the new character length for message
            characters = 0; //set the characters back to 0
            message_draw = ""; //clear the drawn text
        }
        else 
        { //if our messages are done (we reach end)...
            message_current = 0;
            message_draw = "";
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if room = menu room_goto_next();
if room != menu 
{
    alarm[0] = 5; //slight delay to load file
    if game = 1
    {
    if !file_exists(global.fname) //create ini if it doesn't exists
    {
        set_variables(); //set the variables to their default values
        save(); //update the ini file with the info
    }

    ini_open(global.fname); //open and read the ini and give the values to variables

    load();

    ini_close(); //close the ini file
    reset();
    }
    else if game = 2 load();
    game = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = menu
{
    draw_set_colour(c_gray);
    draw_rectangle(room_width/2-64,room_height/2-64,room_width/2+64,room_height/2-32,0);
    draw_rectangle(room_width/2-64,room_height/2-16,room_width/2+64,room_height/2+16,0);
    draw_rectangle(room_width/2-64,room_height/2+32,room_width/2+64,room_height/2+64,0);
    draw_set_font(font0);
    draw_set_colour(c_purple);
    draw_text(room_width/2-64,room_height/2-128,"Hazard \#32");
    draw_set_colour(c_black);
    var i;
    for (i=0; i&lt;=2; i++)
    draw_text(room_width/2-32,room_height/2-48+(i*48),m[i]);
}
else //if room != menu
{
//window_set_cursor(cr_none);
if view_current = 1 //makes sure things are being drawn exclusively on status bar view
{
///TEXT
draw_set_colour(c_dkgray);
draw_rectangle(view_xview[1],view_yview[1],view_wview[1],view_hview[1],0)
draw_set_colour(c_black);
draw_rectangle(view_xview[1]+64,view_yview[1],view_xview[1]+128,view_yview[1]+vlimit,0);
draw_set_colour(c_lime);
draw_set_font(font0);
draw_text_ext(view_xview[1]+64,view_yview[1],message_draw,-1,hlimit);
if instance_exists(obj_player) draw_sprite(spr_koskicon,ceil(global.helth-1),64,0);
//debug:
//draw_text(view_xview[1],view_yview[1],characters);
//draw_text(view_xview[1],view_yview[1]+16,message_length);
//draw_text(view_xview[1],view_yview[1]+32,global.action);
draw_text(x,y,view_xview[0]);
ini_open(global.fname);
draw_text(x,y+16,ini_read_real("GAME","viewx",0));
ini_close();
if mouse_y &lt; view_hview[1] draw_sprite_ext(spr_aim,0,mouse_x,mouse_y,1,1,0,c_white,1);
}
else if mouse_y &gt;= 0 draw_sprite_ext(spr_aim,0,mouse_x,mouse_y,1,1,0,c_white,1);
background_x[0] = (view_xview[0]);
background_y[0] = (view_yview[0]);
}
/*else
{
    physics_world_draw_debug(phy_debug_render_shapes);
}
window_set_cursor(cr_none);
cursor_sprite = spr_aim;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
//reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
